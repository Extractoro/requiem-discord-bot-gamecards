import { config } from "dotenv";
import {
  Client,
  GatewayIntentBits,
  REST,
  Routes,
  ActionRowBuilder,
  ButtonBuilder,
  ButtonStyle,
  EmbedBuilder,
} from "discord.js";
import { connect } from "mongoose";

import gameCard from "./gameCard.js";
import User from "./db/userSchema.js";
import Game from "./db/gamesSchema.js";

config();

const TOKEN = process.env.BOT_TOKEN;
const CLIENT_ID = process.env.CLIENT_ID;
const MONGODB_URL = process.env.MONGODB_URL;
const rest = new REST({ version: "10" }).setToken(TOKEN);

const client = new Client({
  intents: [
    GatewayIntentBits.Guilds,
    GatewayIntentBits.GuildMessages,
    GatewayIntentBits.MessageContent,
    GatewayIntentBits.GuildMembers,
  ],
});

client.login(TOKEN);

(async () => {
  await connect(MONGODB_URL, { dbName: "db" })
    .then(console.log("Connected!"))
    .catch(console.error);
})();

client.on("ready", () => {
  console.log(`${client.user.username} is ready!`);
});

client.on("interactionCreate", async (interaction) => {
  if (interaction.isChatInputCommand()) {
    if (interaction.commandName === "card") {
      //   await interaction.channel.send({
      //     embeds: [
      //       new EmbedBuilder()
      //         .setColor(0x0000)
      //         .setTitle("Dota 2")
      //         .setURL("https://store.steampowered.com/app/570/Dota_2/")
      //         .setDescription(
      //           "–ï–∂–µ–¥–Ω–µ–≤–Ω–æ –º–∏–ª–ª–∏–æ–Ω—ã –∏–≥—Ä–æ–∫–æ–≤ –ø–æ –≤—Å–µ–º—É –º–∏—Ä—É —Å—Ä–∞–∂–∞—é—Ç—Å—è –æ—Ç –ª–∏—Ü–∞ –æ–¥–Ω–æ–≥–æ –∏–∑ –±–æ–ª–µ–µ —Å–æ—Ç–Ω–∏ –≥–µ—Ä–æ–µ–≤ Dota 2, –∏ –¥–∞–∂–µ –ø–æ—Å–ª–µ —Ç—ã—Å—è—á–∏ —á–∞—Å–æ–≤ –≤ –Ω–µ–π –µ—Å—Ç—å —á–µ–º—É –Ω–∞—É—á–∏—Ç—å—Å—è. –ë–ª–∞–≥–æ–¥–∞—Ä—è —Ä–µ–≥—É–ª—è—Ä–Ω—ã–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è–º –∏–≥—Ä–∞ –∂–∏–≤—ë—Ç —Å–≤–æ–µ–π –∂–∏–∑–Ω—å—é: –≥–µ–π–º–ø–ª–µ–π, –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –∏ –≥–µ—Ä–æ–∏ –ø–æ—Å—Ç–æ—è–Ω–Ω–æ –ø—Ä–µ–æ–±—Ä–∞–∂–∞—é—Ç—Å—è."
      //         )
      //         .addFields(
      //           {
      //             name: `–¢–∏–ø`,
      //             value: `\` –ú—É–ª—å—Ç–∏–ø–ª–µ–µ—Ä      \``,
      //             inline: true,
      //           },
      //           {
      //             name: `–ú–∏–Ω–∏–º—É–º –∏–≥—Ä–æ–∫–æ–≤`,
      //             value: `\` 2                \``,
      //             inline: true,
      //           },
      //           {
      //             name: `–ú–∞–∫—Å–∏–º—É–º –∏–≥—Ä–æ–∫–æ–≤`,
      //             value: `\` 5                 \``,
      //             inline: true,
      //           },
      //           {
      //             name: `–ü–æ–¥–ø–∏—Å–∞–Ω–æ`,
      //             value: `\` 0                        \``,
      //             inline: true,
      //           },
      //           {
      //             name: `–ü–ª–∞—Ç—Ñ–æ—Ä–º–∞`,
      //             value: `\` PC                           \``,
      //             inline: true,
      //           }
      //         )
      //         .setImage(
      //           "https://cdn.akamai.steamstatic.com/steam/apps/570/header.jpg"
      //         ),
      //     ],
      //     components: [
      //       new ActionRowBuilder().setComponents(
      //         new ButtonBuilder()
      //           .setCustomId("subscribe")
      //           .setLabel("–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è")
      //           .setStyle(ButtonStyle.Success)
      //           .setEmoji("üìú")
      //           .setDisabled(false),
      //         new ButtonBuilder()
      //           .setCustomId("unsubscribe")
      //           .setLabel("–û—Ç–ø–∏—Å–∞—Ç—å—Å—è")
      //           .setStyle(ButtonStyle.Danger)
      //           .setEmoji("‚õî")
      //           .setDisabled(false),
      //         new ButtonBuilder()
      //           .setCustomId("players")
      //           .setLabel("–ò–≥—Ä–æ–∫–∏")
      //           .setStyle(ButtonStyle.Primary)
      //           .setEmoji("‚öî")
      //           .setDisabled(false),
      //         new ButtonBuilder()
      //           .setCustomId("create")
      //           .setLabel("–°–æ–∑–¥–∞—Ç—å")
      //           .setStyle(ButtonStyle.Secondary)
      //           .setEmoji("üîä")
      //           .setDisabled(false),
      //         new ButtonBuilder()
      //           .setLabel("–ß–∞—Ç")
      //           .setStyle(ButtonStyle.Link)
      //           .setURL(`https://store.steampowered.com/app/570/Dota_2/`)
      //           .setEmoji("üí¨")
      //           .setDisabled(false)
      //       ),
      //     ],
      //   });
      await gameCard(interaction);
    }
  } else if (interaction.isButton()) {
    const gameIds = await Game.find();
    console.log(gameIds);

    if (interaction.customId === "dota2-subscribe") {
      console.log(interaction);
      interaction.channel.send("subscribe");
    }
    if (interaction.customId === "unsubscribe") {
      interaction.channel.send("unsubscribe");
    }
    if (interaction.customId === "players") {
      interaction.channel.send("players");
    }
    if (interaction.customId === "create") {
      interaction.channel.send("create");
    }
  }
});

async function main() {
  const commands = [
    {
      name: "card",
      description: "Create card",
    },
  ];

  try {
    console.log("Started refreshing application (/) commands.");

    await rest.put(Routes.applicationCommands(CLIENT_ID), {
      body: commands,
    });

    console.log("Successfully reloaded application (/) commands.");
  } catch (err) {
    console.log(err);
  }
}

main();
